;; Object .myshellsetup/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file ".myshellsetup/"
  :tables (list 
   (semanticdb-table ".emacs-d-custom"
    :major-mode 'emacs-lisp-mode
    :tags '(("s-minibuffer-complete" function (:user-visible-flag t) nil [858 1424]) ("s-minibuffer-complete-word" function (:user-visible-flag t) nil [1426 2008]) ("s-minibuffer-complete-and-exit" function (:user-visible-flag t) nil [2010 2603]) ("s-switch-to-buffer" function (:user-visible-flag t) nil [2606 2992]) ("setq" code nil nil [2994 3031]) ("ask-for-mwheel" variable nil nil [3257 3284]) ("do-require-mwheel" variable (:default-value t) nil [3285 3313]) ("add-hook" code nil nil [3339 3399]) ("add-hook" code nil nil [3400 3449]) ("mapcar" code nil nil [3655 3864]) ("if" code nil nil [5254 5348]) ("scroll-down-one-line" function (:user-visible-flag t :arguments ("arg")) nil [5350 5637]) ("scroll-up-one-line" function (:user-visible-flag t :arguments ("arg")) nil [5639 5922]) ("if" code nil nil [5956 6040]) ("setq" code nil nil [6409 6579]) ("if" code nil nil [6616 6679]) ("standard-display-european" code nil nil [6697 6726]) ("set-input-mode" code nil nil [6727 6833]) ("setq" code nil nil [6835 6866]) ("setq" code nil nil [6868 6899]) ("setq" code nil nil [6901 6945]) ("setq" code nil nil [6947 6980]) ("setq" code nil nil [7018 7058]) ("setq-default" code nil nil [7096 7136]) ("setq" code nil nil [7170 7199]) ("global-set-key" code nil nil [7244 7312]) ("if" code nil nil [7367 7551]) ("setq" code nil nil [7579 7624]) ("setq" code nil nil [7755 7804]) ("auto-compression-mode" code nil nil [7893 7918]) ("fset" code nil nil [7966 7995]) ("put" code nil nil [8048 8084]) ("custom-set-variables" code nil nil [8103 8775]) ("paren" include nil nil [8828 8844]) ("if" code nil nil [8845 8897]) ("setq" code nil nil [8898 8937]) ("setq-default" code nil nil [8975 9020]) ("if" code nil nil [9083 9141]) ("setq" code nil nil [9348 9386]) ("setq" code nil nil [9387 9426]) ("font-lock" include nil nil [9428 9448]) ("setq" code nil nil [9498 9520]) ("setq" code nil nil [9570 9592]) ("setq" code nil nil [9593 9614]) ("setq" code nil nil [9661 9681]) ("setq" code nil nil [9734 9759]) ("setq" code nil nil [9760 9787]) ("setq" code nil nil [9788 9822]) ("display-time" code nil nil [9823 9837]) ("if" code nil nil [9911 9963]) ("cond" code nil nil [10029 10191]) ("setq" code nil nil [10218 10244]) ("setq" code nil nil [10317 10374]) ("setq" code nil nil [10498 10555]) ("setq" code nil nil [10586 10642]) ("setq" code nil nil [10689 10717]) ("setq" code nil nil [10745 10803]) ("my-c-style" variable (:constant-flag t :default-value (quote ((c-tab-always-indent . t) (c-basic-offset . 4) (c-comment-only-line-offset . 0) (c-hanging-braces-alist (substatement-open after) (brace-list-open)) (c-hanging-colons-alist (member-init-intro before) (inher-intro) (case-label after) (label after) (access-label after)) (c-cleanup-list scope-operator empty-defun-braces defun-close-semi) (c-offsets-alist (arglist-close . c-lineup-arglist) (substatement-open . 0) (case-label . +) (block-open . 0) (access-label . -) (label . 0) (knr-argdecl-intro . -))))) nil [10805 12388]) ("ezsystems-c-style" variable (:constant-flag t :default-value (quote ((c-tab-always-indent . t) (c-basic-offset . 4) (c-comment-only-line-offset . 0) (c-hanging-braces-alist (substatement-open after) (brace-list-open)) (c-hanging-colons-alist (member-init-intro before) (inher-intro) (case-label after) (label after) (access-label after)) (c-cleanup-list scope-operator empty-defun-braces defun-close-semi) (c-offsets-alist (arglist-close . c-lineup-arglist) (substatement-open . 0) (case-label . +) (block-open . 0) (access-label . -) (label . 0) (knr-argdecl-intro . -))))) nil [12390 14018]) ("php-mode" include nil nil [14043 14062]) ("ezsystems-php-style" variable (:constant-flag t :default-value (quote ((c-tab-always-indent . t) (c-basic-offset . 4) (c-comment-only-line-offset . 0) (c-hanging-braces-alist (substatement-open after) (brace-list-open)) (c-hanging-colons-alist (member-init-intro before) (inher-intro) (case-label after) (label after) (access-label after)) (c-cleanup-list scope-operator empty-defun-braces defun-close-semi) (c-offsets-alist (arglist-close . c-lineup-arglist) (substatement-open . 0) (case-label . +) (block-open . 0) (access-label . -) (label . 0) (knr-argdecl-intro . -) (inline-open . 0))))) nil [14064 15751]) ("c-add-style" code nil nil [15779 15814]) ("c-add-style" code nil nil [15862 15903]) ("my-c-mode-common-hook" function nil nil [15905 19363]) ("add-hook" code nil nil [19365 19418]) ("my-php-mode-hook" function nil nil [19420 22383]) ("add-hook" code nil nil [22385 22428]) ("add-hook" code nil nil [22480 23151]) ("add-hook" code nil nil [23293 23341]) ("add-hook" code nil nil [23343 23755]) ("add-hook" code nil nil [23757 24025]) ("add-hook" code nil nil [24027 24285]) ("add-hook" code nil nil [24287 24543]) ("setq" code nil nil [24578 24668]) ("setq" code nil nil [24694 24783]) ("setq" code nil nil [24809 24898]) ("setq" code nil nil [24924 25013]) ("setq" code nil nil [25041 25131]) ("setq" code nil nil [25159 25250]) ("setq" code nil nil [25278 25369]) ("setq" code nil nil [25396 25484]) ("setq" code nil nil [25510 25598]) ("load" code nil nil [25624 25679]) ("javascript-mode" function (:prototype-flag t :user-visible-flag t) nil [25709 25755]) ("add-to-list" code nil nil [25756 25818]) ("load-file" code nil nil [25843 25913]) ("cedet" include nil nil [25914 25930]) ("setq" code nil nil [25932 26010]) ("ecb-autoloads" include nil nil [26011 26035]) ("setq" code nil nil [26063 26144]) ("semantic-load-enable-code-helpers" code nil nil [26146 26181]) ("ecb-autoloads" include nil nil [26183 26207]) ("ruby-mode" function (:prototype-flag t :user-visible-flag t) nil [26209 26265]) ("setq" code nil nil [26266 26336]) ("setq" code nil nil [26337 26410]) ("modify-coding-system-alist" code nil nil [26412 26462]) ("modify-coding-system-alist" code nil nil [26463 26516]) ("snippet" include nil nil [26518 26536]) ("rails" include nil nil [26537 26553]) ("try-complete-abbrev" function (:arguments ("old")) nil [26555 26618]) ("setq" code nil nil [26620 26738]) ("add-hook" code nil nil [26740 27300]) ("append" code nil nil [27375 27847]) ("load" code nil nil [27949 27998]) ("setq-default" code nil nil [27999 28047]) ("setq-default" code nil nil [28048 28090]))
    :file ".emacs-d-custom"
    :pointmax 28093
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
